rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Food items collection rules
    match /food_items/{foodId} {
      // Anyone can read food items
      allow read: if true;
      // Only admins can write food items
      allow write: if isAdmin();
    }

    // User profiles collection rules
    match /users/{userId} {
      // Users can read any profile
      allow read: if isAuthenticated();
      // Users can only write their own profile
      // Admins can update any profile
      allow write: if isOwner(userId) || isAdmin();
    }

    // Cart items collection rules
    match /carts/{userId} {
      // Users can only read/write their own cart
      allow read, write: if isOwner(userId);
    }

    // Orders collection rules
    match /orders/{orderId} {
      // Users can read their own orders
      // Admins can read all orders
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      // Users can create orders
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      // Only admins can update order status
      allow update: if isAdmin() && 
        (request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['status', 'updatedAt']));
    }

    // Reviews collection rules
    match /reviews/{reviewId} {
      // Anyone can read reviews
      allow read: if true;
      // Authenticated users can create reviews
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      // Users can update/delete their own reviews
      // Admins can update/delete any review
      allow update, delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
  }
} 